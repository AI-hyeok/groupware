<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.projectdemo.domain.board.mapper.PostsMapper">

    <!-- 게시글 작성 -->
    <insert id="insertPost" parameterType="com.example.projectdemo.domain.board.dto.PostsDTO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO posts (
            emp_id,
            title,
            content,
            views,
            created_at,
            board_id
        ) VALUES (
                     #{empId},
                     #{title},
                     #{content},
                     #{views},
                     #{createdAt},
                     #{boardId}
                 )
    </insert>

    <!-- 게시글 목록 조회 -->
    <select id="getAllPosts" resultType="com.example.projectdemo.domain.board.dto.PostsDTO">
        SELECT
            p.id,
            p.title,
            p.emp_id AS empId,
            e.name AS author,
            p.views,
            p.board_id AS boardId,
            p.created_at AS createdAt
        FROM posts p
                 LEFT JOIN employees e ON p.emp_id = e.id
        ORDER BY p.id DESC
    </select>

    <!-- 게시글 상세 조회 -->
    <select id="getPostById" parameterType="int" resultType="com.example.projectdemo.domain.board.dto.PostsDTO">
        SELECT
            p.id,
            p.title,
            p.content,
            p.emp_id AS empId,
            e.name AS author,
            p.created_at AS createdAt,
            p.views,
            p.board_id AS boardId,
            b.name AS boardName
        FROM posts p
                 LEFT JOIN employees e ON p.emp_id = e.id
                 LEFT JOIN boards b ON p.board_id = b.id
        WHERE p.id = #{id}
    </select>




<!--    <select id="getPostsByBoardId" resultType="com.example.projectdemo.domain.board.dto.PostsDTO">-->
<!--        SELECT p.*, b.name as boardName, e.name as author-->
<!--        FROM posts p-->
<!--                 JOIN boards b ON p.board_id = b.id-->
<!--                 JOIN employees e ON p.emp_id = e.id-->
<!--        WHERE p.board_id = #{boardId}-->
<!--        ORDER BY p.created_at DESC-->
<!--    </select>-->

    <!-- 특정 게시판의 게시글 목록 조회 -->
    <select id="getPostsByBoardId" parameterType="Integer" resultType="com.example.projectdemo.domain.board.dto.PostsDTO">
        SELECT
            p.id,
            p.emp_id as empId,
            p.title,
            p.content,
            p.views,
            p.created_at as createdAt,
            p.board_id as boardId,
            b.name as boardName,
            e.name as author
        FROM
            posts p
                JOIN
            boards b ON p.board_id = b.id
                JOIN
            employees e ON p.emp_id = e.id
        WHERE
            p.board_id = #{boardId}
        ORDER BY
            p.created_at DESC
    </select>

<!--    <select id="getPostById" resultType="com.example.projectdemo.domain.board.dto.PostsDTO">-->
<!--        SELECT p.*, b.name as boardName, e.name as author-->
<!--        FROM posts p-->
<!--                 JOIN boards b ON p.board_id = b.id-->
<!--                 JOIN employees e ON p.emp_id = e.id-->
<!--        WHERE p.id = #{id}-->
<!--    </select>-->

    <select id="getAccessiblePostsByEmpId" resultType="com.example.projectdemo.domain.board.dto.PostsDTO">
        SELECT p.*, b.name as boardName, e.name as author
        FROM posts p
                 JOIN boards b ON p.board_id = b.id
                 JOIN employees e ON p.emp_id = e.id
        WHERE
            b.is_global = 1
           OR p.board_id IN (
            SELECT board_id FROM board_permissions WHERE emp_id = #{empId}
        )
        ORDER BY p.created_at DESC
    </select>



</mapper>
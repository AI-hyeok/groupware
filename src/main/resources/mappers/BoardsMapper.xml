<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- BoardMapper.xml -->
<mapper namespace="com.example.projectdemo.domain.board.mapper.BoardsMapper">
    <!-- 모든 게시판 조회 -->
    <select id="getAllBoards" resultType="com.example.projectdemo.domain.board.dto.BoardsDTO">
        SELECT *
        FROM boards
        where is_active = 1
    </select>

    <!-- ID로 활성화된 게시판 조회 -->
    <select id="getBoardById" resultType="com.example.projectdemo.domain.board.dto.BoardsDTO">
        SELECT * FROM boards WHERE id = #{id} AND is_active = 1
    </select>

    <!-- 직원 ID로 권한이 있는 게시판 목록 조회 -->
    <select id="getBoardsByEmpId" resultType="com.example.projectdemo.domain.board.dto.BoardsDTO">
        SELECT b.*
        FROM boards b
                 JOIN board_permissions bp ON b.id = bp.board_id
        WHERE bp.emp_id = #{empId} AND b.is_active = 1
        ORDER BY b.sort_order ASC
    </select>

    <!-- 전사 게시판만 조회 -->
    <select id="getGlobalBoards" resultType="com.example.projectdemo.domain.board.dto.BoardsDTO">
        SELECT *
        FROM boards
        WHERE is_global = 1
          AND is_active = 1
        ORDER BY sort_order ASC
    </select>

    <!-- 게시판 생성 -->
    <insert id="insertBoard" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO boards (name, is_global, description, is_active, sort_order, created_at)
        VALUES (#{name}, #{isGlobal}, #{description}, #{isActive}, #{sortOrder}, NOW())
    </insert>

    <!-- 게시판 수정 -->
    <update id="updateBoard" parameterType="com.example.projectdemo.domain.board.dto.BoardsDTO">
        UPDATE boards
        SET name        = #{name},
            is_global   = #{isGlobal},
            description = #{description},
            is_active   = #{isActive},
            sort_order  = #{sortOrder}
        WHERE id = #{id}
    </update>

    <!-- 게시판 삭제 (is_active = 0으로 업데이트) -->
    <update id="deleteBoard" parameterType="java.lang.Integer">
        UPDATE boards
        SET is_active = 0
        WHERE id = #{id}
    </update>

    <!-- 게시판 정렬 순서 수정 -->
    <update id="updateBoardSortOrder">
        UPDATE boards
        SET sort_order = #{sortOrder}
        WHERE id = #{id}
    </update>

    <!-- 게시판 정렬 순서 중 최대값 조회 -->
    <select id="getMaxSortOrder" resultType="java.lang.Integer">
        SELECT MAX(sort_order)
        FROM boards
    </select>

    <!-- 이름으로 게시판 존재 여부 확인 -->
    <select id="existsByName" parameterType="java.lang.String" resultType="boolean">
        SELECT EXISTS (SELECT 1 FROM boards WHERE name = #{name} AND is_active = 1)
    </select>

    <!-- 직원이 쓰기 권한이 있는 게시판 목록 조회 (관리 가능한 게시판) -->
    <select id="getManageableBoardsByEmpId" resultType="com.example.projectdemo.domain.board.dto.BoardsDTO">
        SELECT b.*
        FROM boards b
                 JOIN board_permissions bp ON b.id = bp.board_id
        WHERE bp.emp_id = #{empId}
          AND bp.permission_type = '쓰기'
          AND b.is_active = 1
        ORDER BY b.sort_order ASC, b.created_at ASC
    </select>

    <!-- 게시판이 전사 게시판인지 여부 조회 -->
    <select id="isGlobalBoard" resultType="boolean">
        SELECT is_global
        FROM boards
        WHERE id = #{boardId}
    </select>
</mapper>
